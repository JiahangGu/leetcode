有一道智力题：三个容积分别为3、5、8的水桶，要平分8升水，即每份都是4升，不能使用额外的容器，且桶上没有刻度。
对于这种无法按照人类思维方式推导答案的问题，通常使用穷举法。
使用穷举法，首先定义问题的解，并分析解空间的范围和拓扑结构，然后根据空间范围和拓扑结构设计遍历搜索算法。
本例中，问题的解为5升和8升的桶各装4升水。因为只有三个桶，可以使用数组表示每个桶的状态，例如初始状态为[8,0,0]，终止
状态为[4,4,0]。
状态之间的转换需要倒水动作来实现。倒水动作是指将一个有水的桶中的水导入到有空间的桶中，且要么倒完，要么倒满。倒水可以定义为将
x升水从from倒入to中。
定义好状态和动作之后，我们可以得到状态树，根节点是当前状态，所有的子节点是采取一步合法倒水动作之后得到的状态。叶子结点表示终止结点，
如果叶节点等于解则说明从根节点到叶子结点的路径是一个可行解，否则回溯继续寻找其余解。这里状态可能存在重复，所以需要使用标记判断是否
遍历过防止陷入循环的情况。

算法：从初始状态开始，遍历所有的合法倒水动作，并得到对应的状态，如果该状态没有遍历过，则标记该状态并进入递归搜索阶段。当得到的状态
等于解状态时记录该解。